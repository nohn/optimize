#!/usr/bin/env bash
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

set -e

usage() {
    echo "Usage: optimize FILENAME"
}

getmimetype() {
    mimetype --output-format "%m" "$1"
}

checkoptimizerinstalled() {
    MIMETYPE=$1
    OPTIMIZER=$(which "$2")
    if [ ! -x "$OPTIMIZER" ]; then
        echo "Please install $2 to optimize $1 files"
        exit 1
    fi
}

process() {
    INPUTFILE="$1"
    MIMETYPE=$(getmimetype "$INPUTFILE")
    case "$MIMETYPE" in
        "application/javascript")
            checkoptimizerinstalled "$MIMETYPE" yui-compressor
            TEMPFILE=$(tempfile)
            yui-compressor --nomunge "$INPUTFILE" -o "$TEMPFILE"
            mv "$TEMPFILE" "$INPUTFILE"
            ;;
        "application/x-virtualbox-vdi")
            checkoptimizerinstalled "$MIMETYPE" VBoxManage
            VBoxManage modifyhd "$INPUTFILE" --compact
            ;;
        "image/gif")
            checkoptimizerinstalled "$MIMETYPE" gifsicle
            TEMPFILE=$(tempfile)
            gifsicle -V -O3 "$INPUTFILE" -o "$TEMPFILE"
            mv "$TEMPFILE" "$INPUTFILE"
            ;;
        "image/jpeg")
            checkoptimizerinstalled "$MIMETYPE" jpegoptim
            jpegoptim --strip-all "$INPUTFILE"
            ;;
        "image/x-apple-ios-png")
            checkoptimizerinstalled "$MIMETYPE" optipng
            optipng -o 7 "$INPUTFILE"
            ;;
        "image/png")
            checkoptimizerinstalled "$MIMETYPE" optipng
            optipng -o 7 "$INPUTFILE"
            ;;
        "text/css")
            checkoptimizerinstalled "$MIMETYPE" yui-compressor
            TEMPFILE=$(tempfile)
            yui-compressor "$INPUTFILE" -o "$TEMPFILE"
            mv "$TEMPFILE" "$INPUTFILE"
            ;;
        "text/html")
            checkoptimizerinstalled "$MIMETYPE" yui-compressor
            TEMPFILE=$(tempfile)
            yui-compressor --type css --nomunge  "$INPUTFILE" -o "$TEMPFILE"
            mv "$TEMPFILE" "$INPUTFILE"
            ;;
        "video/mp4")
            checkoptimizerinstalled "$MIMETYPE" ffmpeg
            TEMPFILE=$(tempfile -s ".mp4")
            ffmpeg -i  "$INPUTFILE" -vcodec libx265 -crf 28 "$TEMPFILE"
            mv "$TEMPFILE" "$INPUTFILE"
            ;;	
        *)
            echo "Mime-Type $MIMETYPE not supported."
            ;;
    esac
}

if [ "$#" == "0" ]; then
    usage
    exit 1
fi

INPUTFILE="$1"
if [ -z "$INPUTFILE" ]; then
    usage
    exit 1
fi

while (($#)); do
    if [ -f "$1" ]; then
        process "$1"
    elif [ -d "$1" ]; then
        find "$1" -type f | while read file; do
            process "$file"
        done
    else
        echo "ERROR: $1 is no file or directory."
        exit 1
    fi
    shift
done
